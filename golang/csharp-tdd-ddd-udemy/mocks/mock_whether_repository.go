// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tabakazu/csharp-tdd-ddd-udemy/domain/repository (interfaces: IWhetherRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/tabakazu/csharp-tdd-ddd-udemy/domain"
	reflect "reflect"
)

// MockIWhetherRepository is a mock of IWhetherRepository interface
type MockIWhetherRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIWhetherRepositoryMockRecorder
}

// MockIWhetherRepositoryMockRecorder is the mock recorder for MockIWhetherRepository
type MockIWhetherRepositoryMockRecorder struct {
	mock *MockIWhetherRepository
}

// NewMockIWhetherRepository creates a new mock instance
func NewMockIWhetherRepository(ctrl *gomock.Controller) *MockIWhetherRepository {
	mock := &MockIWhetherRepository{ctrl: ctrl}
	mock.recorder = &MockIWhetherRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIWhetherRepository) EXPECT() *MockIWhetherRepositoryMockRecorder {
	return m.recorder
}

// GetLatest mocks base method
func (m *MockIWhetherRepository) GetLatest(arg0 int) domain.Whether {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatest", arg0)
	ret0, _ := ret[0].(domain.Whether)
	return ret0
}

// GetLatest indicates an expected call of GetLatest
func (mr *MockIWhetherRepositoryMockRecorder) GetLatest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatest", reflect.TypeOf((*MockIWhetherRepository)(nil).GetLatest), arg0)
}
