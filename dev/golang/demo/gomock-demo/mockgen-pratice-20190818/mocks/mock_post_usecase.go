// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tabakazu/gomock-demo/controller (interfaces: PostUsecase)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/tabakazu/gomock-demo/domain"
	reflect "reflect"
)

// MockPostUsecase is a mock of PostUsecase interface
type MockPostUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockPostUsecaseMockRecorder
}

// MockPostUsecaseMockRecorder is the mock recorder for MockPostUsecase
type MockPostUsecaseMockRecorder struct {
	mock *MockPostUsecase
}

// NewMockPostUsecase creates a new mock instance
func NewMockPostUsecase(ctrl *gomock.Controller) *MockPostUsecase {
	mock := &MockPostUsecase{ctrl: ctrl}
	mock.recorder = &MockPostUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPostUsecase) EXPECT() *MockPostUsecaseMockRecorder {
	return m.recorder
}

// GetPostByID mocks base method
func (m *MockPostUsecase) GetPostByID(arg0 int) (*domain.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPostByID", arg0)
	ret0, _ := ret[0].(*domain.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPostByID indicates an expected call of GetPostByID
func (mr *MockPostUsecaseMockRecorder) GetPostByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPostByID", reflect.TypeOf((*MockPostUsecase)(nil).GetPostByID), arg0)
}
